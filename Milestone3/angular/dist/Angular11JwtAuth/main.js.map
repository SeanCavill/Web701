{"version":3,"sources":["./src/app/board-member/board-member.component.ts","./src/app/board-member/board-member.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/_services/auth.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/_services/token-storage.service.ts","./src/app/board-user/board-user.component.ts","./src/app/board-user/board-user.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/_services/user.service.ts","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/app.module.ts","./src/app/board-benefactor/board-benefactor.component.ts","./src/app/board-benefactor/board-benefactor.component.html","./src/app/_helpers/auth.interceptor.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAkD;;;AAQ3C,MAAM,oBAAoB;IAG/B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEjD,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,SAAS,CACzC,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC;QAC/C,CAAC,CACF,CAAC;IACJ,CAAC;;wFAdU,oBAAoB;oGAApB,oBAAoB;QCRjC,yEACE;QAAA,4EACE;QAAA,oEAAG;QAAA,uDAAa;QAAA,4DAAI;QACtB,4DAAS;QACX,4DAAM;;QAFC,0DAAa;QAAb,4EAAa;;6FDMP,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;;;;;;;;;;;;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;IC2BxC,sEAAsC;IAAA,+EAAoB;IAAA,4DAAM;;;IAChE,sEACE;IAAA,mGACF;IAAA,4DAAM;;;IACN,sEACE;IAAA,mGACF;IAAA,4DAAM;;;IAPR,0EACE;IAAA,2HAAgE;IAChE,2HAEM;IACN,2HAEM;IACR,4DAAM;;;;IAPE,0DAA8B;IAA9B,qFAA8B;IAC9B,0DAA+B;IAA/B,sFAA+B;IAG/B,0DAA+B;IAA/B,sFAA+B;;;IAiBrC,sEAAmC;IAAA,4EAAiB;IAAA,4DAAM;;;IAC1D,sEACE;IAAA,gGACF;IAAA,4DAAM;;;IAJR,0EACE;IAAA,4HAA0D;IAC1D,4HAEM;IACR,4DAAM;;;;IAJE,0DAA2B;IAA3B,qFAA2B;IAC3B,0DAAwB;IAAxB,kFAAwB;;;IAiB9B,sEAAsC;IAAA,+EAAoB;IAAA,4DAAM;;;IAChE,sEACE;IAAA,mGACF;IAAA,4DAAM;;;IAJR,0EACE;IAAA,4HAAgE;IAChE,4HAEM;IACR,4DAAM;;;;IAJE,0DAA8B;IAA9B,qFAA8B;IAC9B,0DAA+B;IAA/B,sFAA+B;;;IASzC,0EACE;IAAA,0EAAc;IAAA,gEAAM;IAAA,uDACtB;IAAA,4DAAM;;;IADgB,0DACtB;IADsB,8FACtB;;;;IAvEF,6EAOE;IAJA,wZAAuC;IAIvC,yEACE;IAAA,2EAAsB;IAAA,mEAAQ;IAAA,4DAAQ;IACtC,+EAUA;IANE,yVAA2B;IAJ7B,4DAUA;IAAA,qHAQM;IACR,4DAAM;IACN,yEACE;IAAA,4EAAmB;IAAA,iEAAK;IAAA,4DAAQ;IAChC,iFASA;IALE,uVAAwB;IAJ1B,4DASA;IAAA,uHAKM;IACR,4DAAM;IACN,0EACE;IAAA,6EAAsB;IAAA,oEAAQ;IAAA,4DAAQ;IACtC,iFASA;IALE,0VAA2B;IAJ7B,4DASA;IAAA,uHAKM;IACR,4DAAM;IACN,0EACE;IAAA,8EAA0C;IAAA,mEAAO;IAAA,4DAAS;IAC5D,4DAAM;IAEN,uHAEM;IACR,4DAAO;;;;;;;IA3DD,0DAA2B;IAA3B,yFAA2B;IAMF,0DAAoC;IAApC,6FAAoC;IAgB7D,0DAAwB;IAAxB,sFAAwB;IAKC,0DAAiC;IAAjC,6FAAiC;IAa1D,0DAA2B;IAA3B,yFAA2B;IAKF,0DAAoC;IAApC,6FAAoC;IAW/B,0DAAmC;IAAnC,wGAAmC;;;IAKvE,0EACE;IAAA,6FACF;IAAA,4DAAM;;AD3EH,MAAM,iBAAiB;IAU5B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAT5C,SAAI,GAAQ;YACV,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,IAAI;YACX,QAAQ,EAAE,IAAI;SACf,CAAC;QACF,iBAAY,GAAG,KAAK,CAAC;QACrB,mBAAc,GAAG,KAAK,CAAC;QACvB,iBAAY,GAAG,EAAE,CAAC;IAE8B,CAAC;IAEjD,QAAQ;IACR,CAAC;IAED,QAAQ;QACN,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC;QAEhD,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC,SAAS,CAC5D,IAAI,CAAC,EAAE;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC9B,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;YACtC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC7B,CAAC,CACF,CAAC;IACJ,CAAC;;kFA7BU,iBAAiB;iGAAjB,iBAAiB;QCR9B,yEACE;QAAA,yEACE;QAAA,oEAKA;QAAA,gHAwEO;QAEP,6GAEM;QACR,4DAAM;QACR,4DAAM;;QA7EC,0DAAmB;QAAnB,mFAAmB;QAyEY,0DAAkB;QAAlB,kFAAkB;;6FDzE3C,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAA2C;AACoB;;;AAG/D,MAAM,QAAQ,GAAG,iCAAiC,CAAC;AAEnD,MAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;CACjE,CAAC;AAKK,MAAM,WAAW;IACtB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,KAAK,CAAC,QAAgB,EAAE,QAAgB;QACtC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,EAAE;YACzC,QAAQ;YACR,QAAQ;SACT,EAAE,WAAW,CAAC,CAAC;IAClB,CAAC;IAED,QAAQ,CAAC,QAAgB,EAAE,KAAa,EAAE,QAAgB;QACxD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,EAAE;YACzC,QAAQ;YACR,KAAK;YACL,QAAQ;SACT,EAAE,WAAW,CAAC,CAAC;IAClB,CAAC;;sEAhBU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACZD;AAAA;AAAA;AAAA;AAAkD;;;AAQ3C,MAAM,aAAa;IAGxB,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEjD,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAC3C,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC;QAC/C,CAAC,CACF,CAAC;IACJ,CAAC;;0EAdU,aAAa;6FAAb,aAAa;QCR1B,yEACE;QAAA,4EACE;QAAA,oEAAG;QAAA,uDAAa;QAAA,4DAAI;QACtB,4DAAS;QACX,4DAAM;;QAFC,0DAAa;QAAb,4EAAa;;6FDMP,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEPD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAA2C;;AAE3C,MAAM,SAAS,GAAG,YAAY,CAAC;AAC/B,MAAM,QAAQ,GAAG,WAAW,CAAC;AAKtB,MAAM,mBAAmB;IAC9B,gBAAgB,CAAC;IAEjB,OAAO;QACL,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;IAChC,CAAC;IAEM,SAAS,CAAC,KAAa;QAC5B,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;QAC5C,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;IAClD,CAAC;IAEM,QAAQ;QACb,OAAO,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IAClD,CAAC;IAEM,QAAQ,CAAC,IAAS;QACvB,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QAC3C,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;IAChE,CAAC;IAEM,OAAO;QACZ,MAAM,IAAI,GAAG,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACrD,IAAI,IAAI,EAAE;YACR,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SACzB;QAED,OAAO,EAAE,CAAC;IACZ,CAAC;;sFA5BU,mBAAmB;sGAAnB,mBAAmB,WAAnB,mBAAmB,mBAFlB,MAAM;6FAEP,mBAAmB;cAH/B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAkD;;;AAQ3C,MAAM,kBAAkB;IAG7B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEjD,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,SAAS,CACvC,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC;QAC/C,CAAC,CACF,CAAC;IACJ,CAAC;;oFAdU,kBAAkB;kGAAlB,kBAAkB;QCR/B,yEACE;QAAA,4EACE;QAAA,oEAAG;QAAA,uDAAa;QAAA,4DAAI;QACtB,4DAAS;QACX,4DAAM;;QAFC,0DAAa;QAAb,4EAAa;;6FDMP,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;ICO5C,wEACE;IAAA,wEAA+D;IAAA,2EAAgB;IAAA,4DAAI;IACrF,4DAAK;;;IACL,wEACE;IAAA,wEAAiD;IAAA,uEAAY;IAAA,4DAAI;IACnE,4DAAK;;;IAEH,wEAAsE;IAAA,+DAAI;IAAA,4DAAI;;;IAIlF,yEACE;IAAA,wEACE;IAAA,wEAA2D;IAAA,kEAAO;IAAA,4DAAI;IACxE,4DAAK;IACL,wEACE;IAAA,wEAAqD;IAAA,gEAAK;IAAA,4DAAI;IAChE,4DAAK;IACP,4DAAK;;;;IAEL,yEACE;IAAA,wEACE;IAAA,wEAAyD;IAAA,uDAAc;IAAA,4DAAI;IAC7E,4DAAK;IACL,wEACE;IAAA,wEAA4C;IAAnB,wSAAkB;IAAC,iEAAM;IAAA,4DAAI;IACxD,4DAAK;IACP,4DAAK;;;IALwD,0DAAc;IAAd,gFAAc;;ADrBxE,MAAM,YAAY;IAOvB,YAAoB,mBAAwC;QAAxC,wBAAmB,GAAnB,mBAAmB,CAAqB;QANpD,UAAK,GAAa,EAAE,CAAC;QAC7B,eAAU,GAAG,KAAK,CAAC;QACnB,wBAAmB,GAAG,KAAK,CAAC;QAC5B,oBAAe,GAAG,KAAK,CAAC;IAGwC,CAAC;IAEjE,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,CAAC;QAExD,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,MAAM,IAAI,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,CAAC;YAChD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YAExB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;YAClE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;YAE1D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SAC/B;IACH,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,CAAC;QACnC,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC3B,CAAC;;wEA1BU,YAAY;4FAAZ,YAAY;QCRzB,yEACE;QAAA,yEACE;QAAA,uEAAiC;QAAA,mEAAQ;QAAA,4DAAI;QAC7C,wEACE;QAAA,wEACE;QAAA,uEAAmD;QAAA,gEAAK;QAAA,4DAAI;QAC9D,4DAAK;QACL,sGAEK;QACL,sGAEK;QACL,yEACE;QAAA,sGAA8E;QAChF,4DAAK;QACP,4DAAK;QAEL,wGAOK;QAEL,wGAOK;QACP,4DAAM;QAEN,0EACE;QAAA,4EAA+B;QACjC,4DAAM;QACR,4DAAM;;QAjCsB,0DAAyB;QAAzB,yFAAyB;QAGzB,0DAAqB;QAArB,qFAAqB;QAIP,0DAAgB;QAAhB,gFAAgB;QAItB,0DAAiB;QAAjB,iFAAiB;QASjB,0DAAgB;QAAhB,gFAAgB;;6FDnBvC,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAA2C;;;AAI3C,MAAM,OAAO,GAAG,iCAAiC,CAAC;AAK3C,MAAM,WAAW;IACtB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,gBAAgB;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,KAAK,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;IAClE,CAAC;IAED,YAAY;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,MAAM,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;IACnE,CAAC;IAED,cAAc;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,KAAK,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;IAClE,CAAC;IAED,kBAAkB;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,YAAY,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;IACzE,CAAC;;sEAjBU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;ICiB9C,qEACE;IAAA,uDACF;IAAA,4DAAK;;;IADH,0DACF;IADE,mFACF;;;IAnBJ,yEACE;IAAA,4EACE;IAAA,qEACE;IAAA,yEAAQ;IAAA,uDAA0B;IAAA,4DAAS;IAAC,oEAC9C;IAAA,4DAAK;IACP,4DAAS;IACT,oEACE;IAAA,yEAAQ;IAAA,iEAAM;IAAA,4DAAS;IACvB,uDAEF;IAAA,4DAAI;IACJ,qEACE;IAAA,0EAAQ;IAAA,kEAAM;IAAA,4DAAS;IACvB,wDACF;IAAA,4DAAI;IACJ,0EAAQ;IAAA,kEAAM;IAAA,4DAAS;IACvB,sEACE;IAAA,kHAEK;IACP,4DAAK;IACP,4DAAM;;;IAlBQ,0DAA0B;IAA1B,4FAA0B;IAKpC,0DAEF;IAFE,uNAEF;IAGE,0DACF;IADE,oGACF;IAGuB,0DAAoB;IAApB,6FAAoB;;;IAO3C,2EACF;;ADjBO,MAAM,gBAAgB;IAG3B,YAAoB,KAA0B;QAA1B,UAAK,GAAL,KAAK,CAAqB;IAAI,CAAC;IAEnD,QAAQ;QACN,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;IAC1C,CAAC;;gFAPU,gBAAgB;gGAAhB,gBAAgB;QCR7B,6GAqBM;QAEN,wMAEc;;;QAzBU,iFAAmB;;6FDQ9B,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACI;AACW;AAEA;AACT;AACU;AACS;AACZ;AACS;AAC0B;AACZ;AACN;AAEA;;AAsBhE,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,CAAC,mFAAwB,CAAC,YAN5B;YACP,uEAAa;YACb,oEAAgB;YAChB,0DAAW;YACX,qEAAgB;SACjB;mIAIU,SAAS,mBAlBlB,2DAAY;QACZ,qEAAc;QACd,8EAAiB;QACjB,kEAAa;QACb,2EAAgB;QAChB,sGAAwB;QACxB,0FAAoB;QACpB,oFAAkB,aAGlB,uEAAa;QACb,oEAAgB;QAChB,0DAAW;QACX,qEAAgB;6FAKP,SAAS;cApBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,qEAAc;oBACd,8EAAiB;oBACjB,kEAAa;oBACb,2EAAgB;oBAChB,sGAAwB;oBACxB,0FAAoB;oBACpB,oFAAkB;iBACnB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,0DAAW;oBACX,qEAAgB;iBACjB;gBACD,SAAS,EAAE,CAAC,mFAAwB,CAAC;gBACrC,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACpCD;AAAA;AAAA;AAAA;AAAkD;;;AAQ3C,MAAM,wBAAwB;IAGnC,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEjD,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAC7C,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC;QAC/C,CAAC,CACF,CAAC;IACJ,CAAC;;gGAdU,wBAAwB;wGAAxB,wBAAwB;QCRrC,yEACE;QAAA,4EACE;QAAA,oEAAG;QAAA,uDAAa;QAAA,4DAAI;QACtB,4DAAS;QACX,4DAAM;;QAFC,0DAAa;QAAb,4EAAa;;6FDMP,wBAAwB;cALpC,uDAAS;eAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,WAAW,EAAE,mCAAmC;gBAChD,SAAS,EAAE,CAAC,kCAAkC,CAAC;aAChD;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AACzB;;;AAO3C,MAAM,gBAAgB,GAAG,gBAAgB,CAAC,CAAG,+BAA+B;AAGrE,MAAM,eAAe;IAC1B,YAAoB,KAA0B;QAA1B,UAAK,GAAL,KAAK,CAAqB;IAAI,CAAC;IAEnD,SAAS,CAAC,GAAqB,EAAE,IAAiB;QAChD,IAAI,OAAO,GAAG,GAAG,CAAC;QAClB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;QACpC,IAAI,KAAK,IAAI,IAAI,EAAE;YAEjB,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC;SAC5E;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;;8EAXU,eAAe;kGAAf,eAAe,WAAf,eAAe;6FAAf,eAAe;cAD3B,wDAAU;;AAeJ,MAAM,wBAAwB,GAAG;IACtC,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,eAAe,EAAE,KAAK,EAAE,IAAI,EAAE;CACvE,CAAC;;;;;;;;;;;;;AC3BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAEW;AACT;AACH;AACS;AACQ;AACkB;AACZ;;;AAE7E,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kEAAa,EAAE;IAC1C,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAE;IAClD,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,2EAAgB,EAAE;IAChD,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,mFAAkB,EAAE;IAC/C,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,yFAAoB,EAAE;IAChD,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,qGAAwB,EAAE;IAC3D,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE;CACpD,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACzBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICwB1C,0EAKE;IAAA,kFACF;IAAA,4DAAM;;;IAkBJ,sEAAsC;IAAA,+EAAoB;IAAA,4DAAM;;;IAChE,sEACE;IAAA,mGACF;IAAA,4DAAM;;;IARR,0EAKE;IAAA,yHAAgE;IAChE,yHAEM;IACR,4DAAM;;;;IAJE,0DAA8B;IAA9B,qFAA8B;IAC9B,0DAA+B;IAA/B,sFAA+B;;;IAWvC,0EAKE;IAAA,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,6GACF;;;;IA3DJ,6EAOE;IAJA,qZAAuC;IAIvC,yEACE;IAAA,2EAAsB;IAAA,mEAAQ;IAAA,4DAAQ;IACtC,+EAQA;IAJE,sVAA2B;IAJ7B,4DAQA;IAAA,kHAMM;IACR,4DAAM;IACN,yEACE;IAAA,4EAAsB;IAAA,oEAAQ;IAAA,4DAAQ;IACtC,iFASA;IALE,uVAA2B;IAJ7B,4DASA;IAAA,oHASM;IACR,4DAAM;IACN,0EACE;IAAA,8EACE;IAAA,mEACF;IAAA,4DAAS;IACX,4DAAM;IACN,0EACE;IAAA,oHAMM;IACR,4DAAM;IACR,4DAAO;;;;;;IAhDD,0DAA2B;IAA3B,yFAA2B;IAO1B,0DAAoC;IAApC,6FAAoC;IAWrC,0DAA2B;IAA3B,yFAA2B;IAQ1B,0DAAoC;IAApC,6FAAoC;IAiBpC,0DAAkC;IAAlC,uGAAkC;;;IAOzC,0EACE;IAAA,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,sGACF;;AD/DG,MAAM,cAAc;IAUzB,YAAoB,WAAwB,EAAU,YAAiC;QAAnE,gBAAW,GAAX,WAAW,CAAa;QAAU,iBAAY,GAAZ,YAAY,CAAqB;QATvF,SAAI,GAAQ;YACV,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,IAAI;SACf,CAAC;QACF,eAAU,GAAG,KAAK,CAAC;QACnB,kBAAa,GAAG,KAAK,CAAC;QACtB,iBAAY,GAAG,EAAE,CAAC;QAClB,UAAK,GAAa,EAAE,CAAC;IAEsE,CAAC;IAE5F,QAAQ;QACN,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE;YAChC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC;SAChD;IACH,CAAC;IAED,QAAQ;QACN,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC;QAEzC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,SAAS,CAClD,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAC9C,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAEjC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC;YAC/C,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;YACtC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC5B,CAAC,CACF,CAAC;IACJ,CAAC;IAED,UAAU;QACR,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC3B,CAAC;;4EAzCU,cAAc;8FAAd,cAAc;QCT3B,yEACE;QAAA,yEACE;QAAA,oEAKA;QAAA,6GA6DO;QAEP,0GAEM;QACR,4DAAM;QACR,4DAAM;;QAlEC,0DAAiB;QAAjB,iFAAiB;QA8Dc,0DAAgB;QAAhB,gFAAgB;;6FD7DzC,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-board-member',\r\n  templateUrl: './board-member.component.html',\r\n  styleUrls: ['./board-member.component.css']\r\n})\r\nexport class BoardMemberComponent implements OnInit {\r\n  content?: string;\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getMemberBoard().subscribe(\r\n      data => {\r\n        this.content = data;\r\n      },\r\n      err => {\r\n        this.content = JSON.parse(err.error).message;\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <header class=\"jumbotron\">\r\n    <p>{{ content }}</p>\r\n  </header>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  form: any = {\r\n    username: null,\r\n    email: null,\r\n    password: null\r\n  };\r\n  isSuccessful = false;\r\n  isSignUpFailed = false;\r\n  errorMessage = '';\r\n\r\n  constructor(private authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSubmit(): void {\r\n    const { username, email, password } = this.form;\r\n\r\n    this.authService.register(username, email, password).subscribe(\r\n      data => {\r\n        console.log(data);\r\n        this.isSuccessful = true;\r\n        this.isSignUpFailed = false;\r\n      },\r\n      err => {\r\n        this.errorMessage = err.error.message;\r\n        this.isSignUpFailed = true;\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"col-md-12\">\r\n  <div class=\"card card-container\">\r\n    <img\r\n      id=\"profile-img\"\r\n      src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n      class=\"profile-img-card\"\r\n    />\r\n    <form\r\n      *ngIf=\"!isSuccessful\"\r\n      name=\"form\"\r\n      (ngSubmit)=\"f.form.valid && onSubmit()\"\r\n      #f=\"ngForm\"\r\n      novalidate\r\n    >\r\n      <div class=\"form-group\">\r\n        <label for=\"username\">Username</label>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          name=\"username\"\r\n          [(ngModel)]=\"form.username\"\r\n          required\r\n          minlength=\"3\"\r\n          maxlength=\"20\"\r\n          #username=\"ngModel\"\r\n        />\r\n        <div class=\"alert-danger\" *ngIf=\"username.errors && f.submitted\">\r\n          <div *ngIf=\"username.errors.required\">Username is required</div>\r\n          <div *ngIf=\"username.errors.minlength\">\r\n            Username must be at least 3 characters\r\n          </div>\r\n          <div *ngIf=\"username.errors.maxlength\">\r\n            Username must be at most 20 characters\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"email\">Email</label>\r\n        <input\r\n          type=\"email\"\r\n          class=\"form-control\"\r\n          name=\"email\"\r\n          [(ngModel)]=\"form.email\"\r\n          required\r\n          email\r\n          #email=\"ngModel\"\r\n        />\r\n        <div class=\"alert-danger\" *ngIf=\"email.errors && f.submitted\">\r\n          <div *ngIf=\"email.errors.required\">Email is required</div>\r\n          <div *ngIf=\"email.errors.email\">\r\n            Email must be a valid email address\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Password</label>\r\n        <input\r\n          type=\"password\"\r\n          class=\"form-control\"\r\n          name=\"password\"\r\n          [(ngModel)]=\"form.password\"\r\n          required\r\n          minlength=\"6\"\r\n          #password=\"ngModel\"\r\n        />\r\n        <div class=\"alert-danger\" *ngIf=\"password.errors && f.submitted\">\r\n          <div *ngIf=\"password.errors.required\">Password is required</div>\r\n          <div *ngIf=\"password.errors.minlength\">\r\n            Password must be at least 6 characters\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <button class=\"btn btn-primary btn-block\">Sign Up</button>\r\n      </div>\r\n\r\n      <div class=\"alert alert-warning\" *ngIf=\"f.submitted && isSignUpFailed\">\r\n        Signup failed!<br />{{ errorMessage }}\r\n      </div>\r\n    </form>\r\n\r\n    <div class=\"alert alert-success\" *ngIf=\"isSuccessful\">\r\n      Your registration is successful!\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst AUTH_API = 'http://localhost:8080/api/auth/';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  login(username: string, password: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'signin', {\r\n      username,\r\n      password\r\n    }, httpOptions);\r\n  }\r\n\r\n  register(username: string, email: string, password: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'signup', {\r\n      username,\r\n      email,\r\n      password\r\n    }, httpOptions);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  content?: string;\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getPublicContent().subscribe(\r\n      data => {\r\n        this.content = data;\r\n      },\r\n      err => {\r\n        this.content = JSON.parse(err.error).message;\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <header class=\"jumbotron\">\r\n    <p>{{ content }}</p>\r\n  </header>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\n\r\nconst TOKEN_KEY = 'auth-token';\r\nconst USER_KEY = 'auth-user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenStorageService {\r\n  constructor() { }\r\n\r\n  signOut(): void {\r\n    window.sessionStorage.clear();\r\n  }\r\n\r\n  public saveToken(token: string): void {\r\n    window.sessionStorage.removeItem(TOKEN_KEY);\r\n    window.sessionStorage.setItem(TOKEN_KEY, token);\r\n  }\r\n\r\n  public getToken(): string | null {\r\n    return window.sessionStorage.getItem(TOKEN_KEY);\r\n  }\r\n\r\n  public saveUser(user: any): void {\r\n    window.sessionStorage.removeItem(USER_KEY);\r\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\r\n  }\r\n\r\n  public getUser(): any {\r\n    const user = window.sessionStorage.getItem(USER_KEY);\r\n    if (user) {\r\n      return JSON.parse(user);\r\n    }\r\n\r\n    return {};\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-board-user',\r\n  templateUrl: './board-user.component.html',\r\n  styleUrls: ['./board-user.component.css']\r\n})\r\nexport class BoardUserComponent implements OnInit {\r\n  content?: string;\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getUserBoard().subscribe(\r\n      data => {\r\n        this.content = data;\r\n      },\r\n      err => {\r\n        this.content = JSON.parse(err.error).message;\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <header class=\"jumbotron\">\r\n    <p>{{ content }}</p>\r\n  </header>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TokenStorageService } from './_services/token-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  private roles: string[] = [];\r\n  isLoggedIn = false;\r\n  showBenefactorBoard = false;\r\n  showMemberBoard = false;\r\n  username?: string;\r\n\r\n  constructor(private tokenStorageService: TokenStorageService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\r\n\r\n    if (this.isLoggedIn) {\r\n      const user = this.tokenStorageService.getUser();\r\n      this.roles = user.roles;\r\n\r\n      this.showBenefactorBoard = this.roles.includes('ROLE_Benefactor');\r\n      this.showMemberBoard = this.roles.includes('ROLE_Member');\r\n\r\n      this.username = user.username;\r\n    }\r\n  }\r\n\r\n  logout(): void {\r\n    this.tokenStorageService.signOut();\r\n    window.location.reload();\r\n  }\r\n}\r\n","<div id=\"app\">\r\n  <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\r\n    <a href=\"#\" class=\"navbar-brand\">bezKoder</a>\r\n    <ul class=\"navbar-nav mr-auto\" routerLinkActive=\"active\">\r\n      <li class=\"nav-item\">\r\n        <a href=\"/home\" class=\"nav-link\" routerLink=\"home\">Home </a>\r\n      </li>\r\n      <li class=\"nav-item\" *ngIf=\"showBenefactorBoard\">\r\n        <a href=\"/Benefactor\" class=\"nav-link\" routerLink=\"Benefactor\">Benefactor Board</a>\r\n      </li>\r\n      <li class=\"nav-item\" *ngIf=\"showMemberBoard\">\r\n        <a href=\"/mod\" class=\"nav-link\" routerLink=\"mod\">Member Board</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a href=\"/user\" class=\"nav-link\" *ngIf=\"isLoggedIn\" routerLink=\"user\">User</a>\r\n      </li>\r\n    </ul>\r\n\r\n    <ul class=\"navbar-nav ml-auto\" *ngIf=\"!isLoggedIn\">\r\n      <li class=\"nav-item\">\r\n        <a href=\"/register\" class=\"nav-link\" routerLink=\"register\">Sign Up</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a href=\"/login\" class=\"nav-link\" routerLink=\"login\">Login</a>\r\n      </li>\r\n    </ul>\r\n\r\n    <ul class=\"navbar-nav ml-auto\" *ngIf=\"isLoggedIn\">\r\n      <li class=\"nav-item\">\r\n        <a href=\"/profile\" class=\"nav-link\" routerLink=\"profile\">{{ username }}</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a href class=\"nav-link\" (click)=\"logout()\">LogOut</a>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n\r\n  <div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst API_URL = 'http://localhost:8080/api/test/';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getPublicContent(): Observable<any> {\r\n    return this.http.get(API_URL + 'all', { responseType: 'text' });\r\n  }\r\n\r\n  getUserBoard(): Observable<any> {\r\n    return this.http.get(API_URL + 'user', { responseType: 'text' });\r\n  }\r\n\r\n  getMemberBoard(): Observable<any> {\r\n    return this.http.get(API_URL + 'mod', { responseType: 'text' });\r\n  }\r\n\r\n  getBenefactorBoard(): Observable<any> {\r\n    return this.http.get(API_URL + 'Benefactor', { responseType: 'text' });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TokenStorageService } from '../_services/token-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  currentUser: any;\r\n\r\n  constructor(private token: TokenStorageService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.token.getUser();\r\n  }\r\n}\r\n","<div class=\"container\" *ngIf=\"currentUser; else loggedOut\">\r\n  <header class=\"jumbotron\">\r\n    <h3>\r\n      <strong>{{ currentUser.username }}</strong> Profile\r\n    </h3>\r\n  </header>\r\n  <p>\r\n    <strong>Token:</strong>\r\n    {{ currentUser.accessToken.substring(0, 20) }} ...\r\n    {{ currentUser.accessToken.substr(currentUser.accessToken.length - 20) }}\r\n  </p>\r\n  <p>\r\n    <strong>Email:</strong>\r\n    {{ currentUser.email }}\r\n  </p>\r\n  <strong>Roles:</strong>\r\n  <ul>\r\n    <li *ngFor=\"let role of currentUser.roles\">\r\n      {{ role }}\r\n    </li>\r\n  </ul>\r\n</div>\r\n\r\n<ng-template #loggedOut>\r\n  Please login.\r\n</ng-template>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { BoardBenefactorComponent } from './board-benefactor/board-benefactor.component';\r\nimport { BoardMemberComponent } from './board-member/board-member.component';\r\nimport { BoardUserComponent } from './board-user/board-user.component';\r\n\r\nimport { authInterceptorProviders } from './_helpers/auth.interceptor';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    HomeComponent,\r\n    ProfileComponent,\r\n    BoardBenefactorComponent,\r\n    BoardMemberComponent,\r\n    BoardUserComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [authInterceptorProviders],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-board-benefactor',\r\n  templateUrl: './board-benefactor.component.html',\r\n  styleUrls: ['./board-benefactor.component.css']\r\n})\r\nexport class BoardBenefactorComponent implements OnInit {\r\n  content?: string;\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getBenefactorBoard().subscribe(\r\n      data => {\r\n        this.content = data;\r\n      },\r\n      err => {\r\n        this.content = JSON.parse(err.error).message;\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <header class=\"jumbotron\">\r\n    <p>{{ content }}</p>\r\n  </header>\r\n</div>\r\n","import { HTTP_INTERCEPTORS, HttpEvent } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\n\r\nimport { TokenStorageService } from '../_services/token-storage.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\nconst TOKEN_HEADER_KEY = 'x-access-token';   // for Node.js Express back-end\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private token: TokenStorageService) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    let authReq = req;\r\n    const token = this.token.getToken();\r\n    if (token != null) {\r\n\r\n      authReq = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, token) });\r\n    }\r\n    return next.handle(authReq);\r\n  }\r\n}\r\n\r\nexport const authInterceptorProviders = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\r\n];\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { BoardUserComponent } from './board-user/board-user.component';\r\nimport { BoardBenefactorComponent } from './board-benefactor/board-benefactor.component';\r\nimport { BoardMemberComponent } from './board-member/board-member.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'home', component: HomeComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'profile', component: ProfileComponent },\r\n  { path: 'user', component: BoardUserComponent },\r\n  { path: 'mod', component: BoardMemberComponent },\r\n  { path: 'Benefactor', component: BoardBenefactorComponent },\r\n  { path: '', redirectTo: 'home', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { TokenStorageService } from '../_services/token-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  form: any = {\r\n    username: null,\r\n    password: null\r\n  };\r\n  isLoggedIn = false;\r\n  isLoginFailed = false;\r\n  errorMessage = '';\r\n  roles: string[] = [];\r\n\r\n  constructor(private authService: AuthService, private tokenStorage: TokenStorageService) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.tokenStorage.getToken()) {\r\n      this.isLoggedIn = true;\r\n      this.roles = this.tokenStorage.getUser().roles;\r\n    }\r\n  }\r\n\r\n  onSubmit(): void {\r\n    const { username, password } = this.form;\r\n\r\n    this.authService.login(username, password).subscribe(\r\n      data => {\r\n        this.tokenStorage.saveToken(data.accessToken);\r\n        this.tokenStorage.saveUser(data);\r\n\r\n        this.isLoginFailed = false;\r\n        this.isLoggedIn = true;\r\n        this.roles = this.tokenStorage.getUser().roles;\r\n        this.reloadPage();\r\n      },\r\n      err => {\r\n        this.errorMessage = err.error.message;\r\n        this.isLoginFailed = true;\r\n      }\r\n    );\r\n  }\r\n\r\n  reloadPage(): void {\r\n    window.location.reload();\r\n  }\r\n}\r\n","<div class=\"col-md-12\">\r\n  <div class=\"card card-container\">\r\n    <img\r\n      id=\"profile-img\"\r\n      src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n      class=\"profile-img-card\"\r\n    />\r\n    <form\r\n      *ngIf=\"!isLoggedIn\"\r\n      name=\"form\"\r\n      (ngSubmit)=\"f.form.valid && onSubmit()\"\r\n      #f=\"ngForm\"\r\n      novalidate\r\n    >\r\n      <div class=\"form-group\">\r\n        <label for=\"username\">Username</label>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          name=\"username\"\r\n          [(ngModel)]=\"form.username\"\r\n          required\r\n          #username=\"ngModel\"\r\n        />\r\n        <div\r\n          class=\"alert alert-danger\"\r\n          role=\"alert\"\r\n          *ngIf=\"username.errors && f.submitted\"\r\n        >\r\n          Username is required!\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Password</label>\r\n        <input\r\n          type=\"password\"\r\n          class=\"form-control\"\r\n          name=\"password\"\r\n          [(ngModel)]=\"form.password\"\r\n          required\r\n          minlength=\"6\"\r\n          #password=\"ngModel\"\r\n        />\r\n        <div\r\n          class=\"alert alert-danger\"\r\n          role=\"alert\"\r\n          *ngIf=\"password.errors && f.submitted\"\r\n        >\r\n          <div *ngIf=\"password.errors.required\">Password is required</div>\r\n          <div *ngIf=\"password.errors.minlength\">\r\n            Password must be at least 6 characters\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <button class=\"btn btn-primary btn-block\">\r\n          Login\r\n        </button>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <div\r\n          class=\"alert alert-danger\"\r\n          role=\"alert\"\r\n          *ngIf=\"f.submitted && isLoginFailed\"\r\n        >\r\n          Login failed: {{ errorMessage }}\r\n        </div>\r\n      </div>\r\n    </form>\r\n\r\n    <div class=\"alert alert-success\" *ngIf=\"isLoggedIn\">\r\n      Logged in as {{ roles }}.\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}